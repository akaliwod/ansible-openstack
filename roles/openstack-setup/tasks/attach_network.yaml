---

- name: Get OpenStack authentication info
  # info returned is stored in openstack.clouds
  os_client_config:
    clouds: "{{ cloud_name }}"

- name: Get management network details
  os_networks_facts:
    cloud: "{{ cloud_name }}"
    name: "{{ networks.management.name }}"

- name: Print management network details
  debug:
    var: openstack_networks

- name: Check if network is already attached to router
  shell: "neutron router-port-list {{ pod.router }} | grep {{ openstack_networks[0].subnets[0] }} | wc -l"
  environment:
    OS_AUTH_URL: "{{ item.auth.auth_url }}"
    OS_USERNAME: "{{ item.auth.username }}"
    OS_PASSWORD: "{{ item.auth.password }}"
    OS_TENANT_NAME: "{{ item.auth.project_name }}"
    OS_REGION_NAME: "{{ item.region_name }}"
  with_items: "{{ openstack.clouds }}"
  register: attach_check
  when: networks.management.attach_router is defined and networks.management.attach_router == True

- name: Network already added to router
  debug:
    msg: Network already added to router
  when: networks.management.attach_router is defined and networks.management.attach_router == True and attach_check.results[0].stdout == "1"

- name: Add management network to router
  command: neutron router-interface-add {{ pod.router }} {{ networks.management.name }}
  environment:
    OS_AUTH_URL: "{{ item.auth.auth_url }}"
    OS_USERNAME: "{{ item.auth.username }}"
    OS_PASSWORD: "{{ item.auth.password }}"
    OS_TENANT_NAME: "{{ item.auth.project_name }}"
    OS_REGION_NAME: "{{ item.region_name}}"
  with_items: "{{ openstack.clouds }}"
  when: networks.management.attach_router is defined and networks.management.attach_router == True and attach_check.results[0].stdout == "0"

...
